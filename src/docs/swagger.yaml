openapi: 3.0.0
info:
  title: Wave Mobile Clone API
  version: "1.0.0"
  description: Documentation de l'API pour le clone de Wave Mobile
servers:
  - url: http://localhost:5000
tags:
  - name: Auth
    description: Gestion de l'authentification
  - name: Transactions
    description: Gestion des transactions financières
paths:
  /api/auth/initiate-register:
    post:
      summary: Initier l'inscription d'un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitiateRegister"
      responses:
        "200":
          description: OTP envoyé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitiateResponse"
        "400":
          description: Erreur de validation

  /api/auth/complete-register:
    post:
      summary: Finaliser l'inscription d'un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteRegister"
      responses:
        "201":
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Erreur de validation

  /api/auth/initiate-login:
    post:
      summary: Initier la connexion de l'utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitiateLogin"
      responses:
        "200":
          description: OTP envoyé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitiateResponse"
        "401":
          description: Utilisateur non trouvé

  /api/auth/complete-login:
    post:
      summary: Finaliser la connexion de l'utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteLogin"
      responses:
        "200":
          description: Connexion réussie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Identifiants invalides

  /api/transactions:
    get:
      summary: Récupérer la liste des transactions
      tags:
        - Transactions
      parameters:
        - in: query
          name: filter
          schema:
            type: string
          description: Filtrer les transactions (jour, semaine, mois, année)
      responses:
        "200":
          description: Liste des transactions

  /api/transactions/debit:
    post:
      summary: Effectuer un débit
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Débit effectué avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        "400":
          description: Erreur de validation ou solde insuffisant

  /api/transactions/credit:
    post:
      summary: Effectuer un crédit
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Crédit effectué avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        "400":
          description: Erreur de validation

  /api/users/{userId}/solde:
    get:
      summary: Obtenir le solde de l'utilisateur
      tags:
        - Transactions
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID de l'utilisateur
      responses:
        "200":
          description: Solde de l'utilisateur
          content:
            application/json:
              schema:
                type: object
                properties:
                  solde:
                    type: number
        "404":
          description: Utilisateur non trouvé

  /api/users/{userId}/transactions:
    get:
      summary: Obtenir l'historique des transactions d'un utilisateur
      tags:
        - Transactions
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID de l'utilisateur
      responses:
        "200":
          description: Liste des transactions de l'utilisateur
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionResponse"
        "404":
          description: Utilisateur non trouvé

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    InitiateRegister:
      type: object
      properties:
        telephone:
          type: string
          description: Numéro de téléphone de l'utilisateur
        nom:
          type: string
          description: Nom de l'utilisateur
        prenom:
          type: string
          description: Prénom de l'utilisateur
        role:
          type: string
          enum: [utilisateur, agent, admin]
          description: Rôle de l'utilisateur
      required:
        - telephone
        - nom
        - prenom
        - role

    CompleteRegister:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur reçu lors de l'initiation
        otpCode:
          type: string
          description: Code OTP reçu par SMS
        pinCode:
          type: string
          description: Code PIN à 4 chiffres
      required:
        - userId
        - otpCode
        - pinCode

    InitiateLogin:
      type: object
      properties:
        telephone:
          type: string
          description: Numéro de téléphone de l'utilisateur
      required:
        - telephone

    CompleteLogin:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur reçu lors de l'initiation
        otpCode:
          type: string
          description: Code OTP reçu par SMS
        pinCode:
          type: string
          description: Code PIN de l'utilisateur
      required:
        - userId
        - otpCode
        - pinCode

    InitiateResponse:
      type: object
      properties:
        message:
          type: string
        userId:
          type: string

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string

    TransactionRequest:
      type: object
      properties:
        montant:
          type: number
          description: Montant de la transaction
        utilisateurSource:
          type: string
          description: ID de l'utilisateur source pour un débit
        utilisateurDestination:
          type: string
          description: ID de l'utilisateur destination pour un crédit
      required:
        - montant

    TransactionResponse:
      type: object
      properties:
        id:
          type: string
        montant:
          type: number
        type:
          type: string
          enum: [debit, credit]
        utilisateurSource:
          type: string
        utilisateurDestination:
          type: string
        status:
          type: string
          enum: [en_attente, terminee, echouee]
        fraisTransaction:
          type: number
        commission:
          type: number
        creeLe:
          type: string
          format: date-time
