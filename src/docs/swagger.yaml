openapi: 3.0.0
info:
  title: Wave Mobile Clone API
  version: '1.0.0'
  description: Documentation de l'API pour le clone de Wave Mobile
servers:
  - url: http://localhost:5000
tags:
  - name: Auth
    description: Gestion de l'authentification
  - name: Transactions
    description: Gestion des transactions financières
  - name: Agents
    description: Gestion des agents et leurs commissions
paths:
  /api/auth/initiate-register:
    post:
      summary: Initier l'inscription d'un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateRegister'
      responses:
        '200':
          description: OTP envoyé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateResponse'
        '400':
          description: Erreur de validation

  /api/auth/complete-register:
    post:
      summary: Finaliser l'inscription d'un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRegister'
      responses:
        '201':
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Erreur de validation

  /api/auth/initiate-login:
    post:
      summary: Initier la connexion de l'utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateLogin'
      responses:
        '200':
          description: OTP envoyé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateResponse'
        '401':
          description: Utilisateur non trouvé

  /api/auth/complete-login:
    post:
      summary: Finaliser la connexion de l'utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteLogin'
      responses:
        '200':
          description: Connexion réussie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Identifiants invalides

  /api/transactions:
    get:
      summary: Récupérer la liste des transactions
      tags:
        - Transactions
      parameters:
        - in: query
          name: filter
          schema:
            type: string
          description: Filtrer les transactions (jour, semaine, mois, année)
      responses:
        '200':
          description: Liste des transactions

  /api/transactions/depot:
    post:
      summary: Effectuer un dépôt
      tags:
        - Transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepotRequest'
      responses:
        '200':
          description: Dépôt effectué avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '401':
          description: Non autorisé
        '403':
          description: Accès refusé (rôle agent requis)

  /api/transactions/retrait:
    post:
      summary: Effectuer un retrait
      tags:
        - Transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetraitRequest'
      responses:
        '200':
          description: Retrait effectué avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '401':
          description: Non autorisé
        '403':
          description: Accès refusé (rôle agent requis)

  /api/transactions/webhook:
    post:
      summary: Webhook pour les notifications de transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
      responses:
        '200':
          description: Webhook traité avec succès

  /api/transactions/{id}/status:
    get:
      summary: Vérifier le statut d'une transaction
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la transaction
      responses:
        '200':
          description: Statut de la transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatus'
        '401':
          description: Non autorisé
        '404':
          description: Transaction non trouvée

  /api/transactions/agent/{id}/commissions:
    get:
      summary: Obtenir les commissions d'un agent
      tags:
        - Agents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de l'agent
      responses:
        '200':
          description: Liste des commissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionResponse'
        '401':
          description: Non autorisé
        '403':
          description: Accès refusé (rôle agent requis)

  /api/transactions/agent/commission/retrait:
    post:
      summary: Retrait des commissions par un agent
      tags:
        - Agents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionRetraitRequest'
      responses:
        '200':
          description: Retrait des commissions effectué avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionRetraitResponse'
        '401':
          description: Non autorisé
        '403':
          description: Accès refusé (rôle agent requis)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    InitiateRegister:
      type: object
      properties:
        telephone:
          type: string
          description: Numéro de téléphone de l'utilisateur
        nom:
          type: string
          description: Nom de l'utilisateur
        prenom:
          type: string
          description: Prénom de l'utilisateur
        role:
          type: string
          enum: [utilisateur, agent, admin]
          description: Rôle de l'utilisateur
      required:
        - telephone
        - nom
        - prenom
        - role

    CompleteRegister:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur reçu lors de l'initiation
        otpCode:
          type: string
          description: Code OTP reçu par SMS
        pinCode:
          type: string
          description: Code PIN à 4 chiffres
      required:
        - userId
        - otpCode
        - pinCode

    InitiateLogin:
      type: object
      properties:
        telephone:
          type: string
          description: Numéro de téléphone de l'utilisateur
      required:
        - telephone

    CompleteLogin:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur reçu lors de l'initiation
        otpCode:
          type: string
          description: Code OTP reçu par SMS
        pinCode:
          type: string
          description: Code PIN de l'utilisateur
      required:
        - userId
        - otpCode
        - pinCode

    InitiateResponse:
      type: object
      properties:
        message:
          type: string
        userId:
          type: string

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string

    DepotRequest:
      type: object
      properties:
        montant:
          type: number
          description: Montant du dépôt
        telephoneClient:
          type: string
          description: Numéro de téléphone du client
      required:
        - montant
        - telephoneClient

    RetraitRequest:
      type: object
      properties:
        montant:
          type: number
          description: Montant du retrait
        telephoneClient:
          type: string
          description: Numéro de téléphone du client
      required:
        - montant
        - telephoneClient

    WebhookRequest:
      type: object
      properties:
        transactionId:
          type: string
        status:
          type: string
          enum: [success, failed, pending]
        message:
          type: string
      required:
        - transactionId
        - status

    TransactionResponse:
      type: object
      properties:
        transactionId:
          type: string
        status:
          type: string
          enum: [success, pending, failed]
        message:
          type: string
        montant:
          type: number

    TransactionStatus:
      type: object
      properties:
        status:
          type: string
          enum: [success, pending, failed]
        details:
          type: object
          description: Détails supplémentaires sur la transaction

    CommissionResponse:
      type: object
      properties:
        total:
          type: number
          description: Montant total des commissions
        transactions:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date-time
              montant:
                type: number
              type:
                type: string
                enum: [depot, retrait]

    CommissionRetraitRequest:
      type: object
      properties:
        montant:
          type: number
          description: Montant à retirer des commissions
      required:
        - montant

    CommissionRetraitResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        montant:
          type: number
        soldeRestant:
          type: number
          description: Solde des commissions restant après le retrait